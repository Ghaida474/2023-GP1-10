# Generated by Django 4.2.6 on 2023-10-12 18:37

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('email', models.CharField(db_column='Email', max_length=130, primary_key=True, serialize=False)),
                ('password', models.CharField(db_column='Password', max_length=130)),
            ],
            options={
                'db_table': 'Admin',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Businessunit',
            fields=[
                ('buemail', models.CharField(db_column='BUemail', max_length=130, primary_key=True, serialize=False)),
                ('phonenumber', models.CharField(db_column='phoneNumber', max_length=130)),
                ('password', models.CharField(max_length=130)),
            ],
            options={
                'db_table': 'BusinessUnit',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Collage',
            fields=[
                ('collageid', models.IntegerField(db_column='CollageID', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=130)),
                ('nostudents', models.IntegerField(db_column='NoStudents')),
                ('nofaculty', models.IntegerField(db_column='NoFaculty')),
                ('nostaff', models.IntegerField(db_column='NoStaff')),
                ('nofemalestudents', models.IntegerField(blank=True, db_column='NoFemaleStudents', null=True)),
                ('nomalestudents', models.IntegerField(blank=True, db_column='NoMaleStudents', null=True)),
                ('departments', models.TextField(db_column='Departments')),
            ],
            options={
                'db_table': 'Collage',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FacultyAndStaff',
            fields=[
                ('firstname', models.CharField(db_column='firstName', max_length=130)),
                ('lastname', models.CharField(db_column='lastName', max_length=130)),
                ('phonenumber', models.CharField(db_column='phoneNumber', max_length=130)),
                ('email', models.CharField(max_length=130)),
                ('gender', models.CharField(db_column='Gender', max_length=130)),
                ('nationality', models.CharField(db_column='Nationality', max_length=130)),
                ('adminemail', models.CharField(db_column='AdminEmail', max_length=130)),
                ('password', models.CharField(max_length=130)),
                ('employeeid', models.CharField(db_column='EmployeeID', max_length=130, primary_key=True, serialize=False)),
                ('position', models.CharField(db_column='Position', max_length=130)),
                ('major', models.CharField(db_column='Major', max_length=130)),
                ('specialization', models.CharField(blank=True, db_column='Specialization', max_length=130, null=True)),
                ('collage', models.CharField(db_column='Collage', max_length=130)),
            ],
            options={
                'db_table': 'Faculty and staff',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Kai',
            fields=[
                ('firstname', models.CharField(db_column='firstName', max_length=130)),
                ('lastname', models.CharField(db_column='lastName', max_length=130)),
                ('phonenumber', models.CharField(db_column='phoneNumber', max_length=130)),
                ('email', models.CharField(max_length=130)),
                ('userid', models.IntegerField(db_column='UserID')),
                ('gender', models.CharField(blank=True, db_column='Gender', max_length=130, null=True)),
                ('nationality', models.CharField(blank=True, db_column='Nationality', max_length=130, null=True)),
                ('adminemail', models.CharField(db_column='AdminEmail', max_length=130)),
                ('password', models.CharField(max_length=130)),
                ('kaiemployeeid', models.CharField(db_column='KAIEmployeeID', max_length=130, primary_key=True, serialize=False)),
                ('kaiposition', models.CharField(db_column='KAIPosition', max_length=130)),
            ],
            options={
                'db_table': 'KAI',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Program',
            fields=[
                ('programid', models.IntegerField(db_column='ProgramID', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=130)),
                ('totalcost', models.FloatField(blank=True, db_column='TotalCost', null=True)),
                ('taxpercentage', models.FloatField(blank=True, db_column='TaxPercentage', null=True)),
                ('kaipercentage', models.FloatField(blank=True, db_column='KAIPercentage', null=True)),
                ('acceptancestatus', models.CharField(db_column='acceptanceStatus', max_length=130)),
                ('programtype', models.CharField(db_column='programType', max_length=130)),
                ('collage', models.CharField(db_column='Collage', max_length=130)),
                ('leaderid', models.CharField(blank=True, db_column='LeaderID', max_length=130, null=True)),
                ('startdate', models.DateField(blank=True, db_column='startDate', null=True)),
                ('enddate', models.DateField(blank=True, db_column='endDate', null=True)),
                ('programstatus', models.TextField(db_column='programStatus')),
            ],
            options={
                'db_table': 'Program',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('programid', models.IntegerField(db_column='ProgramID')),
                ('name', models.CharField(db_column='Name', max_length=130)),
                ('totalcost', models.FloatField(blank=True, db_column='TotalCost', null=True)),
                ('taxpercentage', models.FloatField(blank=True, db_column='TaxPercentage', null=True)),
                ('kaipercentage', models.FloatField(blank=True, db_column='KAIPercentage', null=True)),
                ('acceptancestatus', models.CharField(db_column='acceptanceStatus', max_length=130)),
                ('programtype', models.CharField(db_column='programType', max_length=130)),
                ('collage', models.CharField(db_column='Collage', max_length=130)),
                ('leaderid', models.CharField(blank=True, db_column='LeaderID', max_length=130, null=True)),
                ('startdate', models.DateField(db_column='startDate')),
                ('enddate', models.DateField(db_column='endDate')),
                ('adminemail', models.CharField(db_column='AdminEmail', max_length=130)),
                ('programstatus', models.TextField(db_column='programStatus')),
                ('companyname', models.CharField(db_column='companyName', max_length=130)),
                ('offeringdate', models.DateField(db_column='OfferingDate')),
                ('acceptancedeadline', models.DateField(db_column='AcceptanceDeadline')),
                ('questionsdeadline', models.DateField(blank=True, db_column='QuestionsDeadline', null=True)),
                ('etimaddeadline', models.DateField(blank=True, db_column='EtimadDeadline', null=True)),
                ('proposalsubmissiondeadline', models.DateField(blank=True, db_column='ProposalSubmissionDeadline', null=True)),
                ('contractduration', models.CharField(blank=True, db_column='ContractDuration', max_length=130, null=True)),
                ('envelopeopeningdate', models.DateField(blank=True, db_column='EnvelopeOpeningDate', null=True)),
                ('rejectionreason', models.CharField(blank=True, db_column='RejectionReason', max_length=130, null=True)),
                ('technicalproposalstatus', models.CharField(blank=True, db_column='TechnicalProposalStatus', max_length=130, null=True)),
                ('financialproposalstatus', models.CharField(blank=True, db_column='FinancialProposalStatus', max_length=130, null=True)),
            ],
            options={
                'db_table': 'Project',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Register',
            fields=[
                ('registerid', models.IntegerField(db_column='RegisterID', primary_key=True, serialize=False)),
                ('registerstatus', models.CharField(db_column='RegisterStatus', max_length=130)),
            ],
            options={
                'db_table': 'Register',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('requestid', models.IntegerField(db_column='RequestID', primary_key=True, serialize=False)),
                ('documment', models.TextField(db_column='Documment')),
            ],
            options={
                'db_table': 'Request',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Trainee',
            fields=[
                ('firstname', models.CharField(db_column='firstName', max_length=130)),
                ('lastname', models.CharField(db_column='lastName', max_length=130)),
                ('phonenumber', models.CharField(db_column='phoneNumber', max_length=130)),
                ('email', models.CharField(max_length=130)),
                ('userid', models.IntegerField(db_column='UserID')),
                ('gender', models.CharField(blank=True, db_column='Gender', max_length=130, null=True)),
                ('nationality', models.CharField(blank=True, db_column='Nationality', max_length=130, null=True)),
                ('adminemail', models.CharField(db_column='AdminEmail', max_length=130)),
                ('password', models.CharField(max_length=130)),
                ('certifications', models.TextField(blank=True, null=True)),
                ('nationalid', models.CharField(db_column='NationalID', max_length=130, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'Trainee',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Trainingprogram',
            fields=[
                ('programid', models.IntegerField(db_column='ProgramID')),
                ('name', models.CharField(db_column='Name', max_length=130)),
                ('totalcost', models.FloatField(blank=True, db_column='TotalCost', null=True)),
                ('taxpercentage', models.FloatField(blank=True, db_column='TaxPercentage', null=True)),
                ('kaipercentage', models.FloatField(blank=True, db_column='KAIPercentage', null=True)),
                ('acceptancestatus', models.CharField(db_column='acceptanceStatus', max_length=130)),
                ('programtype', models.CharField(db_column='programType', max_length=130)),
                ('collage', models.CharField(db_column='Collage', max_length=130)),
                ('leaderid', models.CharField(blank=True, db_column='LeaderID', max_length=130, null=True)),
                ('startdate', models.DateField(db_column='startDate')),
                ('enddate', models.DateField(db_column='endDate')),
                ('adminemail', models.CharField(db_column='AdminEmail', max_length=130)),
                ('programstatus', models.TextField(db_column='programStatus')),
                ('starttime', models.TimeField(db_column='startTime')),
                ('endtime', models.TimeField(db_column='endTime')),
                ('capacity', models.IntegerField()),
                ('attendeescount', models.IntegerField(blank=True, db_column='AttendeesCount', null=True)),
                ('trainingprogramid', models.IntegerField(db_column='TrainingProgramID', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'TrainingProgram',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('firstname', models.CharField(db_column='firstName', max_length=130)),
                ('lastname', models.CharField(db_column='lastName', max_length=130)),
                ('phonenumber', models.CharField(db_column='phoneNumber', max_length=130)),
                ('email', models.CharField(max_length=130)),
                ('userid', models.AutoField(db_column='UserID', primary_key=True, serialize=False)),
                ('gender', models.CharField(blank=True, db_column='Gender', max_length=130, null=True)),
                ('nationality', models.CharField(blank=True, db_column='Nationality', max_length=130, null=True)),
                ('password', models.CharField(max_length=130)),
            ],
            options={
                'db_table': 'User',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Workson',
            fields=[
                ('worksonid', models.IntegerField(db_column='worksOnID', primary_key=True, serialize=False)),
                ('employeepercentage', models.FloatField(db_column='employeePercentage')),
            ],
            options={
                'db_table': 'worksOn',
                'managed': False,
            },
        ),
    ]
