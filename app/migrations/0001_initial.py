# Generated by Django 4.0.5 on 2024-05-18 10:01

import django.contrib.auth.models
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('email', models.CharField(max_length=130, primary_key=True, serialize=False)),
                ('password', models.CharField(max_length=130)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField(blank=True, null=True)),
                ('first_name', models.CharField(blank=True, max_length=130, null=True)),
                ('last_name', models.CharField(blank=True, max_length=130, null=True)),
                ('is_active', models.BooleanField(blank=True, null=True)),
                ('date_joined', models.DateTimeField(blank=True, max_length=130, null=True)),
                ('is_staff', models.BooleanField(blank=True, null=True)),
                ('username', models.CharField(blank=True, max_length=130, null=True)),
            ],
            options={
                'db_table': 'Admin',
                'managed': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(blank=True, max_length=150, null=True, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
                ('phonenumber', models.CharField(blank=True, db_column='phoneNumber', max_length=130, null=True)),
                ('gender', models.CharField(blank=True, db_column='Gender', max_length=130, null=True)),
                ('nationality', models.CharField(blank=True, db_column='Nationality', max_length=130, null=True)),
                ('is_staff', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Collage',
            fields=[
                ('collageid', models.AutoField(db_column='CollageID', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=130)),
                ('nostudents', models.IntegerField(db_column='NoStudents')),
                ('nofaculty', models.IntegerField(db_column='NoFaculty')),
                ('nostaff', models.IntegerField(db_column='NoStaff')),
                ('nofemalestudents', models.IntegerField(blank=True, db_column='NoFemaleStudents', null=True)),
                ('nomalestudents', models.IntegerField(blank=True, db_column='NoMaleStudents', null=True)),
                ('departments', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), db_column='Departments', default=list, size=None)),
                ('buemail', models.CharField(db_column='BUemail', max_length=130)),
                ('buphonenumber', models.CharField(db_column='BUphoneNumber', max_length=130)),
                ('password', models.CharField(max_length=130)),
                ('domain', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(blank=True, null=True), db_column='domain', default=list, size=None)),
                ('nobuilding', models.IntegerField(blank=True, db_column='Nobuilding', null=True)),
                ('nofloor', models.CharField(blank=True, max_length=130, null=True)),
                ('nodisk', models.IntegerField(blank=True, db_column='Nodisk', null=True)),
                ('last_update', models.DateTimeField(blank=True, null=True)),
                ('new_user', models.BooleanField(blank=True, default=True, null=True)),
                ('sendNotificationByEmail', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'Collage',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FacultyStaff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254, unique=True)),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
                ('phonenumber', models.CharField(blank=True, db_column='phoneNumber', max_length=130, null=True)),
                ('gender', models.CharField(blank=True, db_column='Gender', max_length=130, null=True)),
                ('nationality', models.CharField(blank=True, db_column='Nationality', max_length=130, null=True)),
                ('adminemail', models.CharField(blank=True, db_column='AdminEmail', max_length=130, null=True)),
                ('is_staff', models.BooleanField(blank=True, null=True)),
                ('employeeid', models.CharField(db_column='EmployeeID', max_length=130)),
                ('position', models.CharField(db_column='Position', max_length=130)),
                ('major', models.CharField(db_column='Major', max_length=130)),
                ('specialization', models.CharField(blank=True, db_column='Specialization', max_length=130, null=True)),
                ('workstatus', models.CharField(blank=True, db_column='WorkStatus', max_length=130, null=True)),
                ('assignedorganization', models.CharField(blank=True, db_column='assignedOrganization', max_length=130, null=True)),
                ('iban', models.CharField(blank=True, db_column='Iban', default='SA', max_length=130, null=True)),
                ('officeno', models.CharField(blank=True, db_column='OfficeNo', max_length=130, null=True)),
                ('researchinterest', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), blank=True, db_column='ResearchInterest', default=list, null=True, size=None)),
                ('previouswork', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), blank=True, db_column='PreviousWork', default=list, null=True, size=None)),
                ('cv', models.BinaryField(blank=True, db_column='CV', null=True)),
                ('is_buhead', models.BooleanField(blank=True, db_column='is_BUhead', null=True)),
                ('username', models.CharField(max_length=150, unique=True)),
                ('department_field', models.CharField(db_column='Department', max_length=130)),
                ('rank', models.CharField(blank=True, max_length=130, null=True)),
                ('first_nameeng', models.CharField(blank=True, db_column='first_nameEng', max_length=130, null=True)),
                ('last_nameeng', models.CharField(blank=True, db_column='last_nameEng', max_length=130, null=True)),
                ('new_user', models.BooleanField(blank=True, default=True, null=True)),
                ('sendNotificationByEmail', models.BooleanField(db_column='sendNotificationByEmail', default=False)),
            ],
            options={
                'db_table': 'Faculty_Staff',
                'managed': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Files',
            fields=[
                ('fileid', models.AutoField(db_column='file_id', primary_key=True, serialize=False)),
                ('attachment', models.BinaryField(blank=True, db_column='Attachment', null=True)),
                ('attachment_name', models.CharField(blank=True, db_column='Attachment_name', max_length=130, null=True)),
            ],
            options={
                'db_table': 'Files',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IdStatusDate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(blank=True, max_length=130, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('rejectionresons', models.CharField(blank=True, max_length=500, null=True)),
            ],
            options={
                'db_table': 'WorksOn',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Kaibuemployee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254, unique=True)),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
                ('phonenumber', models.CharField(blank=True, db_column='phoneNumber', max_length=130, null=True)),
                ('gender', models.CharField(blank=True, db_column='Gender', max_length=130, null=True)),
                ('nationality', models.CharField(blank=True, db_column='Nationality', max_length=130, null=True)),
                ('adminemail', models.CharField(blank=True, db_column='AdminEmail', max_length=130, null=True)),
                ('kaiemployeeid', models.CharField(db_column='KAIEmployeeID', max_length=130)),
                ('position', models.CharField(db_column='Position', max_length=130)),
                ('is_staff', models.BooleanField(blank=True, null=True)),
                ('username', models.CharField(max_length=150, unique=True)),
                ('new_user', models.BooleanField(blank=True, default=True, null=True)),
                ('is_department_head', models.BooleanField(db_column='is_department_head', default=False)),
                ('sendNotificationByEmail', models.BooleanField(db_column='sendNotificationByEmail', default=False)),
                ('department', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'KAIBUEmployee',
                'managed': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('Name', models.CharField(db_column='Name', max_length=130)),
                ('totalcost', models.FloatField(blank=True, db_column='TotalCost', default=0.0, null=True)),
                ('taxpercentage', models.FloatField(blank=True, db_column='TaxPercentage', default=0.15, null=True)),
                ('kaipercentage', models.FloatField(blank=True, db_column='KAIPercentage', default=0.15, null=True)),
                ('programtype', models.CharField(db_column='programType', max_length=130)),
                ('collageid', models.IntegerField(db_column='Collage')),
                ('programleader', models.IntegerField(blank=True, db_column='LeaderID', null=True)),
                ('enddate', models.DateField(db_column='TeamEndDate')),
                ('status', models.CharField(blank=True, db_column='programStatus', max_length=130, null=True)),
                ('CompanyName', models.CharField(db_column='companyName', max_length=130)),
                ('OfferingDate', models.DateField(db_column='offeringDate')),
                ('QuestionDeadline', models.DateField(db_column='QuestionDeadline')),
                ('EtimadDeadline', models.DateField(db_column='EtimadDeadline')),
                ('ProposalSubmissionDeadline', models.DateField(db_column='ProposalSubmissionDeadline')),
                ('contractDuration', models.IntegerField(db_column='contractDuration')),
                ('rejectionresons', models.CharField(blank=True, db_column='RejectionReason', max_length=500, null=True)),
                ('programid', models.AutoField(db_column='programID', primary_key=True, serialize=False)),
                ('isSubmittedtoKAI', models.BooleanField(blank=True, db_column='isSubmittedtoKAI', null=True)),
                ('isAccepted', models.BooleanField(blank=True, db_column='isAccepted', null=True)),
                ('Teamid', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), blank=True, db_column='teamID', default=list, null=True, size=None)),
                ('num_ofTeam', models.IntegerField(blank=True, db_column='num_ofTeam', null=True)),
                ('appourtunityopentoall', models.BooleanField(blank=True, db_column='appourtunityopentoall', null=True)),
                ('durationType', models.CharField(db_column='durationType', max_length=100)),
                ('description', models.CharField(db_column='descrription', max_length=200)),
                ('chatgroup_id', models.CharField(db_column='chatgroup_id', max_length=200)),
                ('chat_access_key', models.CharField(db_column='chat_access_key', max_length=200)),
            ],
            options={
                'db_table': 'Project',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Register',
            fields=[
                ('registerid', models.AutoField(db_column='RegisterID', primary_key=True, serialize=False)),
                ('certifications', models.TextField(blank=True, db_column='certifications', null=True)),
                ('certifications_ext', models.CharField(blank=True, db_column='certifications_ext', max_length=130, null=True)),
                ('hasregistered', models.BooleanField(blank=True, db_column='hasRegistered', null=True)),
                ('haspaid', models.BooleanField(blank=True, default=False, null=True)),
                ('hasattended', models.BooleanField(blank=True, db_column='hasAttended', default=False, null=True)),
                ('refundrequsted', models.BooleanField(blank=True, db_column='refundRequsted', default=False, null=True)),
            ],
            options={
                'db_table': 'Register',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StatusDateCheck',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(blank=True, max_length=130, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('indicator', models.CharField(blank=True, max_length=1, null=True)),
            ],
            options={
                'db_table': 'Trainingprogram _status',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StatusDateCheckProject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(blank=True, max_length=130, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('indicator', models.CharField(blank=True, max_length=1, null=True)),
            ],
            options={
                'db_table': 'Project_status',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('task_id', models.AutoField(db_column='task_id', primary_key=True, serialize=False)),
                ('task_name', models.TextField()),
                ('task_type', models.TextField()),
                ('task_description', models.TextField(max_length=1000)),
                ('is_classified', models.BooleanField()),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('notes', models.TextField(max_length=1000)),
                ('necessary_procedure', models.TextField()),
                ('priority', models.TextField()),
                ('faculty_ids', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), blank=True, default=list, null=True, size=None)),
                ('kai_ids', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), blank=True, default=list, null=True, size=None)),
                ('status', models.TextField()),
                ('statusarray', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), blank=True, default=list, size=None)),
                ('datearray', django.contrib.postgres.fields.ArrayField(base_field=models.DateField(), blank=True, default=list, size=None)),
                ('is_main_task', models.BooleanField(default=False)),
                ('attachment', models.BinaryField(blank=True, db_column='attacment', null=True)),
                ('countrejection', models.IntegerField(default=0)),
                ('toall', models.BooleanField(default=False)),
                ('full_accomplishment', models.CharField(db_column='fullaccomplishment', max_length=255)),
                ('retrivaldate', models.DateField()),
                ('pending_status', models.TextField()),
                ('pending_reasons', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(blank=True, default=list), default=list, null=True, size=None)),
                ('pending_rquestids', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(blank=True, default=list), default=list, null=True, size=None)),
            ],
            options={
                'db_table': 'task',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TaskToUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.TextField()),
                ('attachment', models.BinaryField(blank=True, db_column='attachment', null=True)),
                ('addedtext', models.TextField(blank=True)),
                ('addeddate', models.DateField(blank=True, null=True)),
                ('date_time', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'task_to_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Trainees',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('first_name', models.CharField(db_column='first_name', max_length=150)),
                ('last_name', models.CharField(db_column='last_name', max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('phonenumber', models.CharField(blank=True, db_column='phoneNumber', max_length=130, null=True)),
                ('gender', models.CharField(blank=True, db_column='Gender', max_length=130, null=True)),
                ('adminemail', models.CharField(blank=True, db_column='AdminEmail', max_length=130, null=True)),
                ('nationalid', models.CharField(blank=True, db_column='NationalID', max_length=130, null=True)),
                ('fullnamearabic', models.CharField(blank=True, db_column='fullNameArabic', max_length=130, null=True)),
            ],
            options={
                'db_table': 'Trainees',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Trainingprogram',
            fields=[
                ('Descriptionofrequirements', models.CharField(db_column='Descriptionofrequirements', max_length=130)),
                ('totalcost', models.FloatField(blank=True, db_column='TotalCost', null=True)),
                ('taxpercentage', models.FloatField(blank=True, db_column='TaxPercentage', default=0.15, null=True)),
                ('kaipercentage', models.FloatField(blank=True, db_column='KAIPercentage', default=0.15, null=True)),
                ('programtype', models.CharField(db_column='programType', max_length=130)),
                ('startdate', models.DateField(db_column='startDate')),
                ('enddate', models.DateField(db_column='endDate')),
                ('starttime', models.TimeField(db_column='startTime')),
                ('endtime', models.TimeField(db_column='endTime')),
                ('capacity', models.IntegerField()),
                ('attendeescount', models.IntegerField(blank=True, db_column='AttendeesCount', null=True)),
                ('programid', models.AutoField(db_column='programID', primary_key=True, serialize=False)),
                ('collageid', models.IntegerField(db_column='CollageID')),
                ('topic', models.CharField(db_column='Topic', max_length=500)),
                ('dataoffacultyproposal', models.DateField(blank=True, db_column='dataOfFacultyProposal', null=True)),
                ('dataofburejection', models.DateField(blank=True, db_column='dataOfBuRejection', null=True)),
                ('dataofkairejection', models.DateField(blank=True, db_column='dataOfKaiRejection', null=True)),
                ('isfacultyfound', models.BooleanField(blank=True, null=True)),
                ('iskaiaccepted', models.BooleanField(blank=True, null=True)),
                ('isreleased_field', models.BooleanField(blank=True, db_column='isreleased ', null=True)),
                ('attachment', models.BinaryField(blank=True, db_column='Attachment', null=True)),
                ('instructorid', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), blank=True, db_column='InstructorID', default=list, null=True, size=None)),
                ('program_domain', models.CharField(blank=True, db_column='Program_domain', max_length=130, null=True)),
                ('isbuaccepted', models.BooleanField(blank=True, db_column='isbuaccepted', null=True)),
                ('initiatedby', models.CharField(blank=True, choices=[('FacultyOrStaff', 'FacultyOrStaff'), ('bu', 'bu'), ('kai', 'kai')], db_column='initiatedby', max_length=130, null=True)),
                ('status', models.CharField(blank=True, db_column='status', max_length=130, null=True)),
                ('cost', models.FloatField()),
                ('costtype', models.CharField(db_column='costType', max_length=130)),
                ('attachment_name', models.CharField(blank=True, db_column='Attachment_name', max_length=130, null=True)),
                ('num_ofinstructors', models.IntegerField(blank=True, db_column='num_ofInstructors', null=True)),
                ('rejectionresons', models.CharField(blank=True, max_length=500, null=True)),
                ('programleader', models.IntegerField(blank=True, null=True)),
                ('lastenrollmentdate', models.DateField(blank=True, null=True)),
                ('programdescription', models.CharField(blank=True, db_column='programDescription', max_length=300, null=True)),
                ('appourtunityopentoall', models.BooleanField(blank=True, null=True)),
                ('programdescription_english', models.CharField(blank=True, db_column='programDescription_english', max_length=300, null=True)),
                ('isonline', models.BooleanField(blank=True, db_column='isOnline', null=True)),
                ('location_field', models.CharField(blank=True, db_column='location ', max_length=130, null=True)),
                ('topic_english', models.CharField(blank=True, max_length=130, null=True)),
            ],
            options={
                'db_table': 'TrainingProgram',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.AutoField(db_column='id', primary_key=True, serialize=False)),
                ('notification_message', models.TextField(db_column='notificationmessage')),
                ('TimeOfCreation', models.DateTimeField(auto_now_add=True, db_column='timeofcreation')),
                ('isread', models.BooleanField(db_column='isread', default=False)),
                ('isopened', models.BooleanField(db_column='isopened', default=False)),
                ('need_to_be_opened', models.BooleanField(db_column='needtobeOpened', default=False)),
                ('function_indicator', models.IntegerField(blank=True, null=True)),
                ('faculty_staff_ids', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), blank=True, null=True, size=None)),
                ('kai_ids', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), blank=True, null=True, size=None)),
                ('need_to_be_shown', models.BooleanField(db_column='needtobeshown', default=False)),
                ('bu_target', models.ForeignKey(db_column='bu_target_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='bu_notifications', to='app.facultystaff')),
                ('faculty_target', models.ForeignKey(db_column='faculty_target_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='faculty_notifications', to='app.facultystaff')),
                ('kaitarget', models.ForeignKey(db_column='kai_target_id', on_delete=django.db.models.deletion.CASCADE, to='app.kaibuemployee')),
                ('project', models.ForeignKey(db_column='project_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='app.project')),
                ('taskid', models.ForeignKey(db_column='task_id', on_delete=django.db.models.deletion.CASCADE, to='app.task')),
                ('training_program', models.ForeignKey(db_column='training_program_id', on_delete=django.db.models.deletion.CASCADE, to='app.trainingprogram')),
            ],
            options={
                'db_table': 'notification',
            },
        ),
    ]
